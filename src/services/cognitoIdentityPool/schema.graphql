type awsSupportedLoginProvider
  @generate(
    query: { get: false, query: true, aggregate: false }
    mutation: { add: false, delete: false }
    subscription: false
  ) {
    identityProvider: String @search(by: [hash, regexp])
    identityProviderId: String @search(by: [hash, regexp])
  }

type awsCognitoIdentityProviders
  @generate(
    query: { get: false, query: true, aggregate: false }
    mutation: { add: false, delete: false }
    subscription: false
  ) {
    providerName: String @search(by: [hash, regexp])
    clientId: String @search(by: [hash, regexp])
    serverSideTokenCheck: String @search(by: [hash, regexp])
  }

type awsCognitoIdentityPool @key(fields: "id") {
  id: String! @id @search(by: [hash])
  identityPoolName: String @search(by: [hash, regexp])
  allowUnauthenticatedIdentities: String @search(by: [hash, regexp])
  allowClassicFlow: String @search(by: [hash, regexp])
  supportedLoginProviders: [awsSupportedLoginProvider]
  developerProviderName: String @search(by: [hash, regexp])
  openIdConnectProviderARNs: [String] @search
  cognitoIdentityProviders: [awsCognitoIdentityProviders]
  samlProviderARNs: [String] @search
  region: String @search(by: [hash, regexp])
  tags: [Tag]
}
