type awsIamInstanceProfile
  @generate(
    query: { get: false, query: false, aggregate: false }
    mutation: { add: false, delete: false }
    subscription: false
  ) {
  id: String! @id
  arn: String @search(by: [hash, regexp])
  createDate: String @search(by: [hash, regexp])
  instanceProfileName: String @search(by: [hash, regexp])
  instanceProfileId: String @search(by: [hash, regexp])
  path: String @search(by: [hash, regexp])
}

type awsIamRole @key(fields: "id") {
  id: String! @id @search(by: [hash])
  arn: String! @id @search(by: [hash, regexp])
  accountId: String! @search(by: [hash, regexp])
  name: String @search(by: [hash, regexp])
  path: String @search(by: [hash, regexp])
  assumeRolePolicy: awsIamJSONPolicy
  description: String @search(by: [hash, regexp])
  createdAt: String @search(by: [hash, regexp])
  maxSessionDuration: Int @search
  tags: [awsRawTag]
  inlinePolicies: [String]
  instanceProfiles: [awsIamInstanceProfile]
  iamAttachedPolicies: [awsIamPolicy] @hasInverse(field: iamRoles)
  eksCluster: [awsEksCluster] @hasInverse(field: iamRoles) #change to plural
  ecsService: [awsEcsService] @hasInverse(field: iamRoles) #change to plural
  flowLogs: [awsFlowLog] @hasInverse(field: iamRole)
  cloudFormationStack: [awsCloudFormationStack] @hasInverse(field: iamRole)
  configurationRecorder: [awsConfigurationRecorder] @hasInverse(field: iamRole)
  codebuilds: [awsCodebuild] @hasInverse(field: iamRoles)
  glueJobs: [awsGlueJob] @hasInverse(field: iamRole)
  managedAirflows: [awsManagedAirflow] @hasInverse(field: iamRoles)
  guardDutyDetectors: [awsGuardDutyDetector] @hasInverse(field: iamRole)
  sageMakerNotebookInstances: [awsSageMakerNotebookInstance] @hasInverse(field: iamRole)
  systemsManagerInstances: [awsSystemsManagerInstance] @hasInverse(field: iamRole)
}
