type awsSubnet @key(fields: "id") {
  id: String! @id @search(by: [hash])
  accountId: String! @search(by: [hash])
  arn: String! @search(by: [hash, regexp])
  autoAssignPublicIpv4Address: String @search(by: [hash, regexp])
  autoAssignPublicIpv6Address: String @search(by: [hash, regexp])
  availabilityZone: String @search(by: [hash, regexp])
  availableIpV4Addresses: Int @search
  defaultForAz: Boolean @search
  ipV4Cidr: String @search(by: [hash, regexp])
  ipV6Cidr: String @search(by: [hash, regexp])
  state: String @search(by: [hash, regexp])
  tags: [Tag]
  alb: [awsAlb] @hasInverse(field: subnet)
  asg: [awsAsg] @hasInverse(field: subnet)
  ec2Instance: [awsEc2] @hasInverse(field: subnet)
  elb: [awsElb] @hasInverse(field: subnet)
  lambda: [awsLambda] @hasInverse(field: subnet)
  natGateway: [awsNatGateway] @hasInverse(field: subnet)
  networkInterface: [awsNetworkInterface] @hasInverse(field: subnet)
  routeTable: [awsRouteTable] @hasInverse(field: subnet)
  vpc: [awsVpc] @hasInverse(field: subnet)
  rdsDbInstance: [awsRDSDbInstance] @hasInverse(field: subnet)
}
