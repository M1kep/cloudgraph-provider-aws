# TODO: change to accountId
type awsBilling {
  id: String!
  account: String! @id @search(by: [hash])
  totalCostMonthToDate: awsTotalBillingInfo
  totalCostLast30Days: awsTotalBillingInfo
  monthToDateDailyAverage: [awsMonthToDateServiceBillingInfoDailyAvg]
  last30DaysDailyAverage: [awsLast30DaysServiceBillingInfoDailyAvg]
  monthToDate: [awsMonthToDateServiceBillingInfo]
  last30Days: [awsLast30DaysServiceBillingInfo]
}

interface awsServiceBillingInfo 
  @generate(
    query: { get: false, query: false, aggregate: false }
    mutation: { add: false, delete: false }
    subscription: false
  ) {
    cost: Float @search
    currency: String @search(by: [hash, regexp])
    formattedCost: String @search(by: [hash, regexp])
  }

type awsMonthToDateServiceBillingInfo implements awsServiceBillingInfo
  @generate(
    query: { get: false, query: true, aggregate: false }
    mutation: { add: false, delete: false }
    subscription: false
  ) {
    name: String! @search(by: [hash])
  }

type awsLast30DaysServiceBillingInfo implements awsServiceBillingInfo
  @generate(
    query: { get: false, query: true, aggregate: false }
    mutation: { add: false, delete: false }
    subscription: false
  ) {
    name: String! @search(by: [hash])
  }

  type awsLast30DaysServiceBillingInfoDailyAvg implements awsServiceBillingInfo
  @generate(
    query: { get: false, query: true, aggregate: false }
    mutation: { add: false, delete: false }
    subscription: false
  ) {
    name: String! @search(by: [hash])
  }

  type awsMonthToDateServiceBillingInfoDailyAvg implements awsServiceBillingInfo
  @generate(
    query: { get: false, query: true, aggregate: false }
    mutation: { add: false, delete: false }
    subscription: false
  ) {
    name: String! @search(by: [hash])
  }

type awsTotalBillingInfo
  @generate(
    query: { get: false, query: false, aggregate: false }
    mutation: { add: false, delete: false }
    subscription: false
  ) {
    cost: Float @search
    currency: String @search(by: [hash, regexp])
    formattedCost: String @search(by: [hash, regexp])
  }