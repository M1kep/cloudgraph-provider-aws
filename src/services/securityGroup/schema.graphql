type awsSecurityGroup @key(fields: "id") {
  id: String! @id @search(by: [hash])
  accountId: String! @search(by: [hash])
  arn: String! @id @search(by: [hash, regexp])
  region: String @search(by: [hash, regexp])
  serviceDisplayName: String @default(add: { value: "Security Group"})
  name: String! @search(by: [hash, regexp])
  vpcId: String @search(by: [hash])
  description: String @search(by: [hash, regexp, fulltext])
  tags: [Tag]
  owner: String @search(by: [hash, regexp])
  default: Boolean @search
  inboundRules: [awsSgInboundRule]
  outboundRules: [awsSgOutboundRule]
  inboundRuleCount: Int @search
  outboundRuleCount: Int @search
  alb: [awsAlb] @hasInverse(field: securityGroups) #change to plural
  lambda: [awsLambda] @hasInverse(field: securityGroups) #change to plural
  elb: [awsElb] @hasInverse(field: securityGroups) #change to plural
  ec2Instance: [awsEc2] @hasInverse(field: securityGroups) #change to plural
  asg: [awsAsg] @hasInverse(field: securityGroups) #change to plural
  rdsCluster: [awsRdsCluster] @hasInverse(field: securityGroups) #change to plural
  rdsDbInstance: [awsRdsDbInstance] @hasInverse(field: securityGroups) #change to plural
  eksCluster: [awsEksCluster] @hasInverse(field: securityGroups) #change to plural
  ecsService: [awsEcsService] @hasInverse(field: securityGroups) #change to plural
  elastiCacheCluster: [awsElastiCacheCluster] @hasInverse(field: securityGroups) #change to plural
}

type awsSgOutboundRule
  @generate(
    query: { get: false, query: true, aggregate: false }
    mutation: { add: false, delete: false }
    subscription: false
  ) {
  id: String! @id
  description: String
  destination: String
  portRange: String
  protocol: String
  userId: String
  groupName: String
  peeringStatus: String
}

type awsSgInboundRule
  @generate(
    query: { get: false, query: true, aggregate: false }
    mutation: { add: false, delete: false }
    subscription: false
  ) {
  id: String! @id
  description: String
  portRange: String
  protocol: String
  source: String
  userId: String
  groupName: String
  peeringStatus: String
}